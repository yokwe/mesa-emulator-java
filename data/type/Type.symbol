Type: SYMBOL =
BEGIN
    -- BUILTIN types
    --   MESA type         JAVA type
    --   BOOLEAN           boolean
    --   CARDINAL          char
    --   INTEGER           short
    --   UNSPECIFIED       char
    --   LONG UNSPECIFIED  int
    --   POINTER           char
    --   LONG POINTER      int
 
    -- 2.1.1. Unspecified
    BLOCK: TYPE = ARRAY [0..0) OF UNSPECIFIED;

    -- 2.1.2 Bit, Nibble, Byte
    BIT:    TYPE = [0..  2);
    NIBBLE: TYPE = [0.. 16);
    BYTE:   TYPE = [0..256);

    NibblePair: TYPE = RECORD[
        left  (0: 0..3): NIBBLE,
        right (0: 4..7): NIBBLE];

    BytePair: TYPE = RECORD[
        left  (0: 0..7 ): BYTE,
        right (0: 8..15): BYTE];

    -- 2.3.1 Long Types
    -- When these types are stored in memory, the low-order (least significant) sixteen bits
    -- occupy the first memory word (at the lower numbered address), and the high-order (most
    -- significant) sixteen bits occupy the second memory word(at the higher memory address).
    --         |15    31|0   15|
    -- address  n        n+1    n+2
    Long: TYPE = RECORD32 [ -- RECORD32 --
      low (0:0..15): UNSPECIFIED,
      high(1:0..15): UNSPECIFIED];

    -- 3.1.4.3 Code Segments
    CodeSegment: TYPE = RECORD [ 
        available(0:0..63): ARRAY [0..4) OF UNSPECIFIED,
        code(4): BLOCK];

    -- 3.2.2.2 Local and Global Frames
    GlobalVariables: TYPE = BLOCK;
    GlobalFrameHandle: TYPE = LONG POINTER TO GlobalVariables;
    
--  GlobalWord: TYPE = RECORD [
--      available(0:  0..13): CARDINAL,
--      trapxfers(0: 14..14): BOOLEAN,
--      codelinks(0: 15..15): BOOLEAN];
-- PrincOpsExtras2
    GlobalWord: TYPE = RECORD [
        gfi       (0: 0..13): GFTIndex,
        trapxfers (0:14..14): BOOLEAN,
        codelinks (0:15..15): BOOLEAN];
    
    GlobalOverhead: TYPE = RECORD [
        available(0: 0..15): UNSPECIFIED,
        word     (1: 0..15): GlobalWord,
        codebase (2: 0..15): LONG POINTER TO CodeSegment,
        global   (4): GlobalVariables];
-- changed chapter
    NewGlobalOverhead: TYPE = RECORD [
        available(0: 0..15): UNSPECIFIED,
        word     (1: 0..15): GlobalWord,
        global   (2): GlobalVariables];


    -- changed chapter
    --9.1.4.1 Global frame table
    -- GFT: LONG POINTER TO GlobalFrameTable = LOOPHOLE[mGFT];
    GFT: LONG POINTER TO GlobalFrameTable = yokwe.majuro.mesa.Constant.mGFT;
    -- GlobalFrameTable: TYPE = LONG BASE POINTER TO ARRAY GFTIndex OF GFTItem;
    GlobalFrameTable: TYPE = ARRAY GFTIndex OF GFTItem;
    -- GFTHandle: TYPE = GlobalFrameTable RELATIVE POINTER TO GFTItem;
    GFTHandle: TYPE = CARDINAL; -- access as GFT + GFTHandle as LONG POINTER TO GFTItem
    GFTIndex: TYPE = [0..16384);
    GFTItem: TYPE = RECORD[
        globalFrame(0: 0..31): GlobalFrameHandle,
        codebase   (2: 0..15): LONG POINTER TO CodeSegment];

    -- Local Frames
    LocalFrameHandle: TYPE = POINTER TO LocalVariables;
    LocalVariables: TYPE = BLOCK;

    LocalWord: TYPE = RECORD [
        available (0:0.. 7): BYTE,
        fsi       (0:8..15): FSIndex];
    
    -- changed chapter
    LocalOverhead: TYPE = RECORD [
        word       (0:0..15): LocalWord,
        returnlink (1:0..15): ShortControlLink,
        globallink (2:0..15): GFTHandle,
        pc         (3:0..15): CARDINAL,
        local      (4)      : LocalVariables];
--    OldLocalOverhead: TYPE = RECORD [
--        word      (0): LocalWord,
--        returnlink(1): ShortControlLink,
--        globallink(2): GlobalFrameHandle,
--        pc        (3): CARDINAL,
--        local     (4) LocalVariables];

    -- 7.5 Field Instruction
    FieldSpec: TYPE = RECORD [
        pos  (0:0..3): NIBBLE,
        size (0:4..7): NIBBLE];
        
    FieldDesc: TYPE = RECORD [
        offset(0:0.. 7): BYTE,
        field (0:8..15): FieldSpec];

    -- 8.4.1 Bit Transfer Utilities
    BitAddress: TYPE = RECORD[
        word    (0: 0..31): LONG POINTER,
        -- FIXME bit field at offset 2
        reserved(2: 0..11): UNSPECIFIED,
        bit     (2:12..15): CARDINAL];

    -- 8.4.2.1 BitBlt Arguments
    BitBltFlags: TYPE = RECORD[
        direction    (0:0.. 0): Direction,
        disjoint     (0:1.. 1): BOOLEAN,
        disjointItems(0:2.. 2): BOOLEAN,
        gray         (0:3.. 3): BOOLEAN,
        srcFunc      (0:4.. 4): SrcFunc,
        dstFunc      (0:5.. 6): DstFunc,
        reserved     (0:7..15): UNSPECIFIED];
        
    SrcFunc:   TYPE = {null(0), complement(1)};
    DstFunc:   TYPE = {null(0), and(1), or(2), xor(3)};
    Direction: TYPE = {forward(0), backward(1)};

    BitBltArg: TYPE = RECORD[
        dst     ( 0:0..47): BitAddress,
        dstBpl  ( 3:0..15): INTEGER,
        src     ( 4:0..47): BitAddress,
        srcBpl  ( 7:0..15): INTEGER,
        width   ( 8:0..15): CARDINAL,
        height  ( 9:0..15): CARDINAL,
        flags   (10:0..15): BitBltFlags,
        reserved(11:0..15): UNSPECIFIED];

    GrayParm: TYPE = RECORD[
        reserved      (0: 0.. 3): NIBBLE,
        yOffset       (0: 4.. 7): NIBBLE,
        widthMinusOne (0: 8..11): NIBBLE,
        heightMinusOne(0:12..15): NIBBLE];

-- SKIP 8.4.3 Text Block Transfer

    -- 9.1 Control Links

    ControlLink:      TYPE = LONG UNSPECIFIED;
    ShortControlLink: TYPE = UNSPECIFIED;
--    LinkType: TYPE  =  {frame(0), procedure(1), indirect(2)};
    -- changed chapter
    LinkType: TYPE = {frame(0), oldProcedure(1), indirect(2), newProcedure(3)};
    TaggedControlLink: TYPE = RECORD32 [ -- RECORD32 --
        data (0: 0..13): UNSPECIFIED,
        tag  (0:14..15): LinkType,
        fill (1: 0..15): UNSPECIFIED];

    -- 9.1.1 Frame Control Links
    FrameLink : TYPE = LocalFrameHandle;
    
    -- 9.1.3 Procedure Descriptor
    ProcDesc: TYPE =  RECORD32 [ -- RECORD32 --
        taggedGF(0:0..15): UNSPECIFIED,
        pc      (1:0..15): CARDINAL];

    -- 9.1.4 New Procedure descriptors
    NewProdDesc: TYPE = RECORD32 [ -- RECORD32 --
        taggedGFI(0:0..15): UNSPECIFIED, -- GFTIndex
        pc       (1:0..15): CARDINAL];

    -- 9.2.1 Frame Allocation Vector
    -- AV: POINTER TO AllocationVector = LOOPHOLsE[mAV];
    AV: POINTER TO AllocationVector = yokwe.majuro.mesa.Constant.mAV;
    AllocationVector: TYPE = ARRAY FSIndex OF AVItem;
    FSIndex: TYPE = [0..256);
    AVItem: TYPE = RECORD [
        data(0:  0 .. 13): UNSPECIFIED,
        tag (0: 14 .. 15): AVItemType];
    AVItemType: TYPE = {frame(0), empty(1), indirect(2), unused(3)};

    -- 9.3 Control Transfer primitives
    XferType: TYPE = {return(0), call(1), localCall(2),
        part(3), xfer(4), trap(5), processSwitch(6), unused(7)};

    -- 9.4.5 Coroutine Transfers
    -- PortLink: TYPE = POINTER TO Port;
    Port: TYPE = RECORD[
        inport (0:0..15): FrameLink,
        unused (1:0..15): UNSPECIFIED,
        outport(2:0..31): ControlLink];

    -- 9.5.1 Trap Routines
    -- SD: POINTER TO SystemData = LOOPHOLE[mSD];
    SD: POINTER TO SystemData = yokwe.majuro.mesa.Constant.mSD;
    SystemData: TYPE = ARRAY SDIndex OF ControlLink;
    SDIndex: TYPE = [0..256);
    -- ETT: POINTER TO EscTrapTable = LOOPHOLE[mETT];
    ETT: POINTER TO EscTrapTable = yokwe.majuro.mesa.Constant.mETT;
    EscTrapTable: TYPE = ARRAY BYTE OF ControlLink;

    -- 9.5.3 Trap Handlers
    --StateHandle: TYPE = LONG POINTER TO Statevector;

    StateWord: TYPE = RECORD [
        instByte(0: 0.. 7): BYTE,
        stkPtr  (0: 8..15): BYTE];

    StackDepth: CARDINAL = yokwe.majuro.mesa.Constant.cSS;
    StateVector: TYPE = RECORD [
        stack( 0:0..223): ARRAY [0..StackDepth) OF UNSPECIFIED, -- StackDepth = 14
        word (14:0.. 15): StateWord,
        frame(15:0.. 15): LocalFrameHandle,
        data (16): BLOCK];

    TransferDescriptor: TYPE = RECORD [
        src     (0:0..15): ShortControlLink,
        reserved(1:0..15): UNSPECIFIED,
        dst     (2:0..31): ControlLink];
        
    -- 10.1.1 Process Data Area
--    ProcessDataArea: TYPE = RECORD [
--        vp (0:0..1023): SELECT OVERLAID * FROM
--            header(0) => [
--                ready     ( 0:0.. 15): Queue,
--                count     ( 1:0.. 15): CARDINAL,
--                unused    ( 2:0.. 15): UNSPECIFIED,
--                available ( 3:0.. 79): ARRAY [0..4] OF UNSPECIFIED,
--                state     ( 8:0..127): StateAllocationTable,
--                interrupt (16:0..511): InterruptVector,
--                fault     (48:0..255): FaultVector],
--            blocks(1) => [
--                block (0): ARRAY PsbIndex OF ProcessStateBlock],
--            ENDCASE];

--    ProcessDataArea: TYPE = RECORD [
--    SELECT OVERLAID * FROM
--        header(0) => [
--            ready: Queue],
--            Count: CARDINAL,
--            unused: UNSPECIFIED,
--            available: ARRAY [0..5) OF UNSPECIFIED,
--            state: StateAllocationTable,
--            interrupt: InterruptVector,
--            fault: FaultVector],
--        blocks(1) => [
--            block: ARRAY [0..0) OF ProcessStateBlock],
--        ENDCASE];

    -- PDA: LONG POINTER TO ProcessDataArea = LOOPHOLE[mPDA];
    PDA: LONG POINTER TO ProcessDataArea = yokwe.majuro.mesa.Constant.mPDA;
    ProcessDataArea: TYPE = RECORD [
        -- equivalent of header arm of SELECT OVERLAID of ProcessDataArea
        ready     ( 0:0.. 15): Queue,
        count     ( 1:0.. 15): CARDINAL,
        unused    ( 2:0.. 15): UNSPECIFIED,
        available ( 3:0.. 79): ARRAY [0..4] OF UNSPECIFIED,
        state     ( 8:0..127): StateAllocationTable,
        interrupt (16:0..511): InterruptVector,
        fault     (48:0..255): FaultVector,
        -- equivalent of blocks arm of SELECT OVERLAID of ProcessDataArea
        block     (0): ARRAY PsbIndex OF ProcessStateBlock];

    PsbIndex: TYPE = [0..1024);
    
    -- 10.1.2 Process State Blocks
    ProcessStateBlock: TYPE = RECORD[
        link     (0:0..15): PsbLink,
        flags    (1:0..15): PsbFlags,
        context  (2:0..15): POINTER,
        timeout  (3:0..15): Ticks,
        mds      (4:0..15): CARDINAL,
        available(5:0..15): UNSPECIFIED,
        stickty  (6:0..31): LONG UNSPECIFIED];
    
    Priority: TYPE = [0..7];
    
    PsbLink: TYPE = RECORD[
        priority (0: 0.. 2): Priority,
        next     (0: 3..12): PsbIndex,
        failed   (0:13..13): BOOLEAN,
        permanent(0:14..14): BOOLEAN,
        preempted(0:15..15): BOOLEAN];
    
    PsbFlags: TYPE = RECORD[
        available(0: 0.. 2): UNSPECIFIED,
        cleanup  (0: 3..12): PsbIndex,
        reserved (0:13..13): UNSPECIFIED,
        waiting  (0:14..14): BOOLEAN,
        abort    (0:15..15): BOOLEAN];
    
    -- 10.1.3 Monitor Locks
    Monitor: TYPE = RECORD[
        reserved (0: 0.. 2): UNSPECIFIED,
        tail     (0: 3..12): PsbIndex,
        available(0:13..14): UNSPECIFIED,
        locked   (0:15..15): BOOLEAN];
    
    -- 10.1.4 Condition Variables
    Condition: TYPE = RECORD[
        reserved (0: 0.. 2): UNSPECIFIED,
        tail     (0: 3..12): PsbIndex,
        available(0:13..13): UNSPECIFIED,
        abortable(0:14..14): BOOLEAN,
        wakeup   (0:15..15): BOOLEAN];
    
    -- 10.1.5 Process Queue
    Queue: TYPE = RECORD[
        reserved1(0: 0.. 2): UNSPECIFIED,
        tail     (0: 3..12): PsbIndex,
        reserved2(0:13..15): UNSPECIFIED];
    
    -- 10.4.2.2 State Vector Allocation
    StateAllocationTable: TYPE = ARRAY Priority OF POINTER TO StateVector;
    
    -- 10.4.3 Faults
    FaultVector: TYPE = ARRAY FaultIndex OF FaultQueue;
    FaultIndex: TYPE = [0..8);
    FaultQueue: TYPE = RECORD[
        queue    (0:0..15): Queue,
        condition(1:0..15): Condition];
        
    -- 10.4.4. Interrupts
    InterruptVector: TYPE = ARRAY InterruptLevel OF InterruptItem;
    InterruptLevel: TYPE = [0..16);
    InterruptItem: TYPE = RECORD[
        condition(0:0..15): Condition,
        available(1:0..15): UNSPECIFIED];

    -- 10.4.5 Timeouts
    Ticks: TYPE = CARDINAL;
    
END.