package yokwe.majuro.type;

public class Constant {
    // AVItem: TYPE = RECORD[data (0:0..13): UNSPECIFIED, tag (0:14..15): AVItemType];
    // AVItemType: TYPE = {frame(0), empty(1), indirect(2), unused(3)};
    // AllocationVector: TYPE = ARRAY FSIndex OF AVItem;
    // BIT: TYPE = [0..2);
    // BLOCK: TYPE = ARRAY [0..0) OF UNSPECIFIED;
    // BOOLEAN: TYPE = BOOLEAN;
    // BYTE: TYPE = [0..256);
    // BitAddress: TYPE = RECORD[word (0:0..31): LONG POINTER, reserved (2:0..11): UNSPECIFIED, bit (2:12..15): CARDINAL];
    // BitBltArg: TYPE = RECORD[dst (0:0..47): BitAddress, dstBpl (3:0..15): INTEGER, src (4:0..47): BitAddress, srcBpl (7:0..15): INTEGER, width (8:0..15): CARDINAL, height (9:0..15): CARDINAL, flags (10:0..15): BitBltFlags, reserved (11:0..15): UNSPECIFIED];
    // BitBltFlags: TYPE = RECORD[direction (0:0..0): Direction, disjoint (0:1..1): BOOLEAN, disjointItems (0:2..2): BOOLEAN, gray (0:3..3): BOOLEAN, srcFunc (0:4..4): SrcFunc, dstFunc (0:5..6): DstFunc, reserved (0:7..15): UNSPECIFIED];
    // BytePair: TYPE = RECORD[left (0:0..7): BYTE, right (0:8..15): BYTE];
    // CARDINAL: TYPE = CARDINAL;
    // CodeSegment: TYPE = RECORD[available (0:0..63): ARRAY [0..4) OF UNSPECIFIED, code (4): BLOCK];
    // Condition: TYPE = RECORD[reserved (0:0..2): UNSPECIFIED, tail (0:3..12): PsbIndex, available (0:13..13): UNSPECIFIED, abortable (0:14..14): BOOLEAN, wakeup (0:15..15): BOOLEAN];
    // ControlLink: TYPE = LONG UNSPECIFIED;
    // Direction: TYPE = {forward(0), backward(1)};
    // DstFunc: TYPE = {null(0), and(1), or(2), xor(3)};
    // EscTrapTable: TYPE = ARRAY BYTE OF ControlLink;
    // FSIndex: TYPE = [0..256);
    // FaultIndex: TYPE = [0..8);
    // FaultQueue: TYPE = RECORD[queue (0:0..15): Queue, condition (1:0..15): Condition];
    // FaultVector: TYPE = ARRAY FaultIndex OF FaultQueue;
    // FieldDesc: TYPE = RECORD[offset (0:0..7): BYTE, field (0:8..15): FieldSpec];
    // FieldSpec: TYPE = RECORD[pos (0:0..3): NIBBLE, size (0:4..7): NIBBLE];
    // FrameLink: TYPE = LocalFrameHandle;
    // GFTHandle: TYPE = CARDINAL;
    // GFTIndex: TYPE = [0..16384);
    // GFTItem: TYPE = RECORD[globalFrame (0:0..31): GlobalFrameHandle, codebase (2:0..31): LONG POINTER TO CodeSegment];
    // GlobalFrameHandle: TYPE = LONG POINTER TO GlobalVariables;
    // GlobalFrameTable: TYPE = ARRAY GFTIndex OF GFTItem;
    // GlobalOverhead: TYPE = RECORD[available (0:0..15): UNSPECIFIED, word (1:0..15): GlobalWord, codebase (2:0..31): LONG POINTER TO CodeSegment, global (4): GlobalVariables];
    // GlobalVariables: TYPE = BLOCK;
    // GlobalWord: TYPE = RECORD[gfi (0:0..13): GFTIndex, trapxfers (0:14..14): BOOLEAN, codelinks (0:15..15): BOOLEAN];
    // GrayParm: TYPE = RECORD[reserved (0:0..3): NIBBLE, yOffset (0:4..7): NIBBLE, widthMinusOne (0:8..11): NIBBLE, heightMinusOne (0:12..15): NIBBLE];
    // INTEGER: TYPE = INTEGER;
    // InterruptItem: TYPE = RECORD[condition (0:0..15): Condition, available (1:0..15): UNSPECIFIED];
    // InterruptLevel: TYPE = [0..16);
    // InterruptVector: TYPE = ARRAY InterruptLevel OF InterruptItem;
    // LONG CARDINAL: TYPE = LONG CARDINAL;
    // LONG POINTER: TYPE = LONG POINTER;
    // LONG UNSPECIFIED: TYPE = LONG UNSPECIFIED;
    // LinkType: TYPE = {frame(0), oldProcedure(1), indirect(2), newProcedure(3)};
    // LocalFrameHandle: TYPE = POINTER TO LocalVariables;
    // LocalOverhead: TYPE = RECORD[word (0:0..15): LocalWord, returnlink (1:0..15): ShortControlLink, globallink (2:0..15): GFTHandle, pc (3:0..15): CARDINAL, local (4): LocalVariables];
    // LocalVariables: TYPE = BLOCK;
    // LocalWord: TYPE = RECORD[available (0:0..7): BYTE, fsi (0:8..15): FSIndex];
    // Long: TYPE = RECORD32[low (0:0..15): UNSPECIFIED, high (1:0..15): UNSPECIFIED];
    // Monitor: TYPE = RECORD[reserved (0:0..2): UNSPECIFIED, tail (0:3..12): PsbIndex, available (0:13..14): UNSPECIFIED, locked (0:15..15): BOOLEAN];
    // NIBBLE: TYPE = [0..16);
    // NewGlobalOverhead: TYPE = RECORD[available (0:0..15): UNSPECIFIED, word (1:0..15): GlobalWord, global (2): GlobalVariables];
    // NewProdDesc: TYPE = RECORD32[taggedGFI (0:0..15): UNSPECIFIED, pc (1:0..15): CARDINAL];
    // NibblePair: TYPE = RECORD[left (0:0..3): NIBBLE, right (0:4..7): NIBBLE];
    // POINTER: TYPE = POINTER;
    // Port: TYPE = RECORD[inport (0:0..15): FrameLink, unused (1:0..15): UNSPECIFIED, outport (2:0..31): ControlLink];
    // Priority: TYPE = [0..7];
    // ProcDesc: TYPE = RECORD32[taggedGF (0:0..15): UNSPECIFIED, pc (1:0..15): CARDINAL];
    // ProcessDataArea: TYPE = RECORD[ready (0:0..15): Queue, count (1:0..15): CARDINAL, unused (2:0..15): UNSPECIFIED, available (3:0..79): ARRAY [0..4] OF UNSPECIFIED, state (8:0..127): StateAllocationTable, interrupt (16:0..511): InterruptVector, fault (48:0..255): FaultVector, block (0): ARRAY PsbIndex OF ProcessStateBlock];
    // ProcessStateBlock: TYPE = RECORD[link (0:0..15): PsbLink, flags (1:0..15): PsbFlags, context (2:0..15): POINTER, timeout (3:0..15): Ticks, mds (4:0..15): CARDINAL, available (5:0..15): UNSPECIFIED, stickty (6:0..31): LONG UNSPECIFIED];
    // PsbFlags: TYPE = RECORD[available (0:0..2): UNSPECIFIED, cleanup (0:3..12): PsbIndex, reserved (0:13..13): UNSPECIFIED, waiting (0:14..14): BOOLEAN, abort (0:15..15): BOOLEAN];
    // PsbIndex: TYPE = [0..1024);
    // PsbLink: TYPE = RECORD[priority (0:0..2): Priority, next (0:3..12): PsbIndex, failed (0:13..13): BOOLEAN, permanent (0:14..14): BOOLEAN, preempted (0:15..15): BOOLEAN];
    // Queue: TYPE = RECORD[reserved1 (0:0..2): UNSPECIFIED, tail (0:3..12): PsbIndex, reserved2 (0:13..15): UNSPECIFIED];
    // SDIndex: TYPE = [0..256);
    // ShortControlLink: TYPE = UNSPECIFIED;
    // SrcFunc: TYPE = {null(0), complement(1)};
    // StateAllocationTable: TYPE = ARRAY Priority OF POINTER TO StateVector;
    // StateHandle: TYPE = LONG POINTER TO StateVector;
    // StateVector: TYPE = RECORD[stack (0:0..223): ARRAY [0..StackDepth) OF UNSPECIFIED, word (14:0..15): StateWord, frame (15:0..15): LocalFrameHandle, data (16): BLOCK];
    // StateWord: TYPE = RECORD[instByte (0:0..7): BYTE, stkPtr (0:8..15): BYTE];
    // SystemData: TYPE = ARRAY SDIndex OF ControlLink;
    // TaggedControlLink: TYPE = RECORD32[data (0:0..13): UNSPECIFIED, tag (0:14..15): LinkType, fill (1:0..15): UNSPECIFIED];
    // Ticks: TYPE = CARDINAL;
    // TransferDescriptor: TYPE = RECORD[src (0:0..15): ShortControlLink, reserved (1:0..15): UNSPECIFIED, dst (2:0..31): ControlLink];
    // UNSPECIFIED: TYPE = UNSPECIFIED;
    // XferType: TYPE = {return(0), call(1), localCall(2), part(3), xfer(4), trap(5), processSwitch(6), unused(7)};
    public static char AV         =    256;
    public static char ETT        =   1024;
    public static int  GFT        = 131072;
    public static int  PDA        =  65536;
    public static char SD         =    512;
    public static char StackDepth =     14;
}
